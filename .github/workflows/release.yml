name: release
on:
  push:
    tags:
      - v*.*.*

  
env:
  PROVIDER: squadcast

  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  NUGET_FEED_URL: https://api.nuget.org/v3/index.json
  PUBLISH_NUGET: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOTNETVERSION: '6.0.x'

  # TODO: NPM Publish
  # PUBLISH_NPM: true
  # NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  # NPM_REGISTRY_URL: https://registry.npmjs.org

  # TODO: Python publish
  # PYPI_API_TOKEN: ""
  # PYPI_REPOSITORY_URL: ""
  # PUBLISH_PYPI: true

jobs: 
  prerequisites:
    name: Prerequisites
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{matrix.goversion}}
        cache-dependency-path: |
            sdk/go.sum
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: pulumi/pulumictl
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Build tfgen & provider binaries
      run: make provider
    - name: Tar provider binaries
      run: tar -zcf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace }}/bin/ pulumi-resource-${{ env.PROVIDER }}
        pulumi-tfgen-${{ env.PROVIDER }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin/provider.tar.gz
  build_sdk:
    name: Build SDKs
    needs: prerequisites
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{matrix.goversion}}
        cache-dependency-path: |
            sdk/go.sum
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: pulumi/pulumictl
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNETVERSION }}
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: Untar provider binaries
      run: >-
        tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace}}/bin

        find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print -exec chmod +x {} \;
    - name: Install plugins
      run: make install_plugins
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
    - name: Set PACKAGE_VERSION to Env
      run: echo "PACKAGE_VERSION=$(pulumictl get version --language generic)" >>
        $GITHUB_ENV    
    - name: Build SDK
      run: make build_${{ matrix.language }}
      # TODO: Check worktree is clean
    - name: Compress SDK folder
      run: tar -zcvf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.language  }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
    strategy:
      fail-fast: true
      matrix:
        goversion:
          - 1.20.x
        language:
          - nodejs
          - python
          - dotnet
          - go
        nodeversion:
          - 16.x
        pythonversion:
          - '3.9'

  publish_binary:
    name: Publish Binary
    needs: build_sdk
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{matrix.goversion}}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: pulumi/pulumictl
    - name: Set PreRelease Version
      run: echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic)" >> $GITHUB_ENV
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v4
      with:
        distribution: goreleaser
        args: -p 3 release --clean
        version: latest
    # TODO: build and verify worktree clean (https://github.com/pulumi/pulumi-aws/blob/v5.42.0/.github/workflows/release.yml#L98)
    - name: Compress SDK folder
      run: tar -zcvf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.language  }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
    strategy:
      fail-fast: true
      matrix:
        goversion:
        - '1.20.x'
        nodeversion:
        - '16.x'
        pythonversion:
        - '3.9'

  publish_sdk:
    name: Publish SDKs
    runs-on: ubuntu-latest
    needs: publish_binary
    steps:
    - name: Publish SDKs
      uses: pulumi/pulumi-package-publisher@v0.0.9
      with:
        sdk: 'dotnet'

