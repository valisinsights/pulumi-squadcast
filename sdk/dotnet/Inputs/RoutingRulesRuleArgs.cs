// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Squadcast.Inputs
{

    public sealed class RoutingRulesRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("basicExpressions")]
        private InputList<Inputs.RoutingRulesRuleBasicExpressionArgs>? _basicExpressions;

        /// <summary>
        /// The basic expression which needs to be evaluated to be true for this rule to apply.
        /// </summary>
        public InputList<Inputs.RoutingRulesRuleBasicExpressionArgs> BasicExpressions
        {
            get => _basicExpressions ?? (_basicExpressions = new InputList<Inputs.RoutingRulesRuleBasicExpressionArgs>());
            set => _basicExpressions = value;
        }

        /// <summary>
        /// The expression which needs to be evaluated to be true for this rule to apply.
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        /// <summary>
        /// is_basic will be true when users use the drop down selectors which will have lhs, op &amp; rhs value, whereas it will be false when they use the advanced mode and it would have the expression for it's value
        /// </summary>
        [Input("isBasic", required: true)]
        public Input<bool> IsBasic { get; set; } = null!;

        /// <summary>
        /// The id of the entity (user, escalation policy, squad) for which we are routing this incident.
        /// </summary>
        [Input("routeToId", required: true)]
        public Input<string> RouteToId { get; set; } = null!;

        /// <summary>
        /// Type of the entity for which we are routing this incident - User, Escalation Policy or Squad
        /// </summary>
        [Input("routeToType", required: true)]
        public Input<string> RouteToType { get; set; } = null!;

        public RoutingRulesRuleArgs()
        {
        }
        public static new RoutingRulesRuleArgs Empty => new RoutingRulesRuleArgs();
    }
}
