// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Squadcast
{
    /// <summary>
    /// [Squadcast Webforms](https://support.squadcast.com/webforms/webforms) allows organizations to expand their customer support by hosting public Webforms, so their customers can quickly create an alert from outside the Squadcast ecosystem. Not only this, but internal stakeholders can also leverage Webforms for easy alert creation.
    /// 
    /// ## Import
    /// 
    /// teamID:webformName Use 'Get All Teams' API to get the id of the team
    /// 
    /// ```sh
    ///  $ pulumi import squadcast:index/sebform:Sebform example_webform "63065e992a5f9a1d5792b6c5:Webform Name"
    /// ```
    /// </summary>
    [SquadcastResourceType("squadcast:index/sebform:Sebform")]
    public partial class Sebform : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Custom domain name (URL).
        /// </summary>
        [Output("customDomainName")]
        public Output<string?> CustomDomainName { get; private set; } = null!;

        /// <summary>
        /// Description of the Webform.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Defines when to send email to the reporter (triggered, acknowledged, resolved).
        /// </summary>
        [Output("emailOns")]
        public Output<ImmutableArray<string>> EmailOns { get; private set; } = null!;

        /// <summary>
        /// Footer link.
        /// </summary>
        [Output("footerLink")]
        public Output<string?> FooterLink { get; private set; } = null!;

        /// <summary>
        /// Footer text.
        /// </summary>
        [Output("footerText")]
        public Output<string?> FooterText { get; private set; } = null!;

        /// <summary>
        /// Webform header.
        /// </summary>
        [Output("header")]
        public Output<string> Header { get; private set; } = null!;

        /// <summary>
        /// Input Fields added to Webforms. Added as tags to incident based on selection.
        /// </summary>
        [Output("inputFields")]
        public Output<ImmutableArray<Outputs.SebformInputField>> InputFields { get; private set; } = null!;

        /// <summary>
        /// Name of the Webform.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Form owner.
        /// </summary>
        [Output("owner")]
        public Output<Outputs.SebformOwner> Owner { get; private set; } = null!;

        /// <summary>
        /// Public URL of the Webform.
        /// </summary>
        [Output("publicUrl")]
        public Output<string> PublicUrl { get; private set; } = null!;

        /// <summary>
        /// Services added to Webform.
        /// </summary>
        [Output("services")]
        public Output<ImmutableArray<Outputs.SebformService>> Services { get; private set; } = null!;

        /// <summary>
        /// Severity of the incident.
        /// </summary>
        [Output("severities")]
        public Output<ImmutableArray<Outputs.SebformSeverity>> Severities { get; private set; } = null!;

        /// <summary>
        /// Webform Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Team id.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;

        /// <summary>
        /// Webform title (public).
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;


        /// <summary>
        /// Create a Sebform resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Sebform(string name, SebformArgs args, CustomResourceOptions? options = null)
            : base("squadcast:index/sebform:Sebform", name, args ?? new SebformArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Sebform(string name, Input<string> id, SebformState? state = null, CustomResourceOptions? options = null)
            : base("squadcast:index/sebform:Sebform", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Sebform resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Sebform Get(string name, Input<string> id, SebformState? state = null, CustomResourceOptions? options = null)
        {
            return new Sebform(name, id, state, options);
        }
    }

    public sealed class SebformArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom domain name (URL).
        /// </summary>
        [Input("customDomainName")]
        public Input<string>? CustomDomainName { get; set; }

        /// <summary>
        /// Description of the Webform.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("emailOns")]
        private InputList<string>? _emailOns;

        /// <summary>
        /// Defines when to send email to the reporter (triggered, acknowledged, resolved).
        /// </summary>
        public InputList<string> EmailOns
        {
            get => _emailOns ?? (_emailOns = new InputList<string>());
            set => _emailOns = value;
        }

        /// <summary>
        /// Footer link.
        /// </summary>
        [Input("footerLink")]
        public Input<string>? FooterLink { get; set; }

        /// <summary>
        /// Footer text.
        /// </summary>
        [Input("footerText")]
        public Input<string>? FooterText { get; set; }

        /// <summary>
        /// Webform header.
        /// </summary>
        [Input("header", required: true)]
        public Input<string> Header { get; set; } = null!;

        [Input("inputFields")]
        private InputList<Inputs.SebformInputFieldArgs>? _inputFields;

        /// <summary>
        /// Input Fields added to Webforms. Added as tags to incident based on selection.
        /// </summary>
        public InputList<Inputs.SebformInputFieldArgs> InputFields
        {
            get => _inputFields ?? (_inputFields = new InputList<Inputs.SebformInputFieldArgs>());
            set => _inputFields = value;
        }

        /// <summary>
        /// Name of the Webform.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Form owner.
        /// </summary>
        [Input("owner", required: true)]
        public Input<Inputs.SebformOwnerArgs> Owner { get; set; } = null!;

        [Input("services", required: true)]
        private InputList<Inputs.SebformServiceArgs>? _services;

        /// <summary>
        /// Services added to Webform.
        /// </summary>
        public InputList<Inputs.SebformServiceArgs> Services
        {
            get => _services ?? (_services = new InputList<Inputs.SebformServiceArgs>());
            set => _services = value;
        }

        [Input("severities")]
        private InputList<Inputs.SebformSeverityArgs>? _severities;

        /// <summary>
        /// Severity of the incident.
        /// </summary>
        [Obsolete(@"Use `input_field` instead of `severity`.")]
        public InputList<Inputs.SebformSeverityArgs> Severities
        {
            get => _severities ?? (_severities = new InputList<Inputs.SebformSeverityArgs>());
            set => _severities = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Webform Tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Team id.
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        /// <summary>
        /// Webform title (public).
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public SebformArgs()
        {
        }
        public static new SebformArgs Empty => new SebformArgs();
    }

    public sealed class SebformState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom domain name (URL).
        /// </summary>
        [Input("customDomainName")]
        public Input<string>? CustomDomainName { get; set; }

        /// <summary>
        /// Description of the Webform.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("emailOns")]
        private InputList<string>? _emailOns;

        /// <summary>
        /// Defines when to send email to the reporter (triggered, acknowledged, resolved).
        /// </summary>
        public InputList<string> EmailOns
        {
            get => _emailOns ?? (_emailOns = new InputList<string>());
            set => _emailOns = value;
        }

        /// <summary>
        /// Footer link.
        /// </summary>
        [Input("footerLink")]
        public Input<string>? FooterLink { get; set; }

        /// <summary>
        /// Footer text.
        /// </summary>
        [Input("footerText")]
        public Input<string>? FooterText { get; set; }

        /// <summary>
        /// Webform header.
        /// </summary>
        [Input("header")]
        public Input<string>? Header { get; set; }

        [Input("inputFields")]
        private InputList<Inputs.SebformInputFieldGetArgs>? _inputFields;

        /// <summary>
        /// Input Fields added to Webforms. Added as tags to incident based on selection.
        /// </summary>
        public InputList<Inputs.SebformInputFieldGetArgs> InputFields
        {
            get => _inputFields ?? (_inputFields = new InputList<Inputs.SebformInputFieldGetArgs>());
            set => _inputFields = value;
        }

        /// <summary>
        /// Name of the Webform.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Form owner.
        /// </summary>
        [Input("owner")]
        public Input<Inputs.SebformOwnerGetArgs>? Owner { get; set; }

        /// <summary>
        /// Public URL of the Webform.
        /// </summary>
        [Input("publicUrl")]
        public Input<string>? PublicUrl { get; set; }

        [Input("services")]
        private InputList<Inputs.SebformServiceGetArgs>? _services;

        /// <summary>
        /// Services added to Webform.
        /// </summary>
        public InputList<Inputs.SebformServiceGetArgs> Services
        {
            get => _services ?? (_services = new InputList<Inputs.SebformServiceGetArgs>());
            set => _services = value;
        }

        [Input("severities")]
        private InputList<Inputs.SebformSeverityGetArgs>? _severities;

        /// <summary>
        /// Severity of the incident.
        /// </summary>
        [Obsolete(@"Use `input_field` instead of `severity`.")]
        public InputList<Inputs.SebformSeverityGetArgs> Severities
        {
            get => _severities ?? (_severities = new InputList<Inputs.SebformSeverityGetArgs>());
            set => _severities = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Webform Tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Team id.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// Webform title (public).
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public SebformState()
        {
        }
        public static new SebformState Empty => new SebformState();
    }
}
