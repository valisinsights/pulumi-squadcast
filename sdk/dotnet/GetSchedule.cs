// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Squadcast
{
    public static class GetSchedule
    {
        /// <summary>
        /// [Squadcast schedules](https://support.squadcast.com/docs/schedules) are used to manage on-call scheduling &amp; determine who will be notified when an incident is triggered. Use this data source to get information about a specific schedule that you can use for other Squadcast resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Squadcast = Pulumi.Squadcast;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Squadcast.GetSchedule.Invoke(new()
        ///     {
        ///         Name = squadcast_schedule.Test.Name,
        ///         TeamId = "team id",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetScheduleResult> InvokeAsync(GetScheduleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScheduleResult>("squadcast:index/getSchedule:getSchedule", args ?? new GetScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// [Squadcast schedules](https://support.squadcast.com/docs/schedules) are used to manage on-call scheduling &amp; determine who will be notified when an incident is triggered. Use this data source to get information about a specific schedule that you can use for other Squadcast resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Squadcast = Pulumi.Squadcast;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Squadcast.GetSchedule.Invoke(new()
        ///     {
        ///         Name = squadcast_schedule.Test.Name,
        ///         TeamId = "team id",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetScheduleResult> Invoke(GetScheduleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScheduleResult>("squadcast:index/getSchedule:getSchedule", args ?? new GetScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScheduleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Schedule.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Team id.
        /// </summary>
        [Input("teamId", required: true)]
        public string TeamId { get; set; } = null!;

        public GetScheduleArgs()
        {
        }
        public static new GetScheduleArgs Empty => new GetScheduleArgs();
    }

    public sealed class GetScheduleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Schedule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Team id.
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        public GetScheduleInvokeArgs()
        {
        }
        public static new GetScheduleInvokeArgs Empty => new GetScheduleInvokeArgs();
    }


    [OutputType]
    public sealed class GetScheduleResult
    {
        /// <summary>
        /// Calendar color scheme for this schedule, hex values.
        /// </summary>
        public readonly string Color;
        /// <summary>
        /// Detailed description about the schedule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Schedule id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the Schedule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Team id.
        /// </summary>
        public readonly string TeamId;

        [OutputConstructor]
        private GetScheduleResult(
            string color,

            string description,

            string id,

            string name,

            string teamId)
        {
            Color = color;
            Description = description;
            Id = id;
            Name = name;
            TeamId = teamId;
        }
    }
}
