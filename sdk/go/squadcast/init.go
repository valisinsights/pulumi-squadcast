// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squadcast

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/valisinsights/pulumi-squadcast/sdk/go/squadcast/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "squadcast:index/deduplicationRules:DeduplicationRules":
		r = &DeduplicationRules{}
	case "squadcast:index/escalationPolicy:EscalationPolicy":
		r = &EscalationPolicy{}
	case "squadcast:index/routingRules:RoutingRules":
		r = &RoutingRules{}
	case "squadcast:index/runbook:Runbook":
		r = &Runbook{}
	case "squadcast:index/sLO:SLO":
		r = &SLO{}
	case "squadcast:index/schedule:Schedule":
		r = &Schedule{}
	case "squadcast:index/scheduleRotationV2:ScheduleRotationV2":
		r = &ScheduleRotationV2{}
	case "squadcast:index/scheduleV2:ScheduleV2":
		r = &ScheduleV2{}
	case "squadcast:index/sebform:Sebform":
		r = &Sebform{}
	case "squadcast:index/service:Service":
		r = &Service{}
	case "squadcast:index/serviceMaintenance:ServiceMaintenance":
		r = &ServiceMaintenance{}
	case "squadcast:index/squad:Squad":
		r = &Squad{}
	case "squadcast:index/suppressionRules:SuppressionRules":
		r = &SuppressionRules{}
	case "squadcast:index/taggingRules:TaggingRules":
		r = &TaggingRules{}
	case "squadcast:index/team:Team":
		r = &Team{}
	case "squadcast:index/teamMember:TeamMember":
		r = &TeamMember{}
	case "squadcast:index/teamRole:TeamRole":
		r = &TeamRole{}
	case "squadcast:index/user:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:squadcast" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/deduplicationRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/escalationPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/routingRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/runbook",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/sLO",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/schedule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/scheduleRotationV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/scheduleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/sebform",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/service",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/serviceMaintenance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/squad",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/suppressionRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/taggingRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/team",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/teamMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/teamRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"squadcast",
		"index/user",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"squadcast",
		&pkg{version},
	)
}
