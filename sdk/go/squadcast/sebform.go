// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squadcast

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/valisinsights/pulumi-squadcast/sdk/go/squadcast/internal"
)

// [Squadcast Webforms](https://support.squadcast.com/webforms/webforms) allows organizations to expand their customer support by hosting public Webforms, so their customers can quickly create an alert from outside the Squadcast ecosystem. Not only this, but internal stakeholders can also leverage Webforms for easy alert creation.
//
// ## Import
//
// teamID:webformName Use 'Get All Teams' API to get the id of the team
//
// ```sh
//
//	$ pulumi import squadcast:index/sebform:Sebform example_webform "63065e992a5f9a1d5792b6c5:Webform Name"
//
// ```
type Sebform struct {
	pulumi.CustomResourceState

	// Custom domain name (URL).
	CustomDomainName pulumi.StringPtrOutput `pulumi:"customDomainName"`
	// Description of the Webform.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Defines when to send email to the reporter (triggered, acknowledged, resolved).
	EmailOns pulumi.StringArrayOutput `pulumi:"emailOns"`
	// Footer link.
	FooterLink pulumi.StringPtrOutput `pulumi:"footerLink"`
	// Footer text.
	FooterText pulumi.StringPtrOutput `pulumi:"footerText"`
	// Webform header.
	Header pulumi.StringOutput `pulumi:"header"`
	// Input Fields added to Webforms. Added as tags to incident based on selection.
	InputFields SebformInputFieldArrayOutput `pulumi:"inputFields"`
	// Name of the Webform.
	Name pulumi.StringOutput `pulumi:"name"`
	// Form owner.
	Owner SebformOwnerOutput `pulumi:"owner"`
	// Public URL of the Webform.
	PublicUrl pulumi.StringOutput `pulumi:"publicUrl"`
	// Services added to Webform.
	Services SebformServiceArrayOutput `pulumi:"services"`
	// Severity of the incident.
	//
	// Deprecated: Use `input_field` instead of `severity`.
	Severities SebformSeverityArrayOutput `pulumi:"severities"`
	// Webform Tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Team id.
	TeamId pulumi.StringOutput `pulumi:"teamId"`
	// Webform title (public).
	Title pulumi.StringOutput `pulumi:"title"`
}

// NewSebform registers a new resource with the given unique name, arguments, and options.
func NewSebform(ctx *pulumi.Context,
	name string, args *SebformArgs, opts ...pulumi.ResourceOption) (*Sebform, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Header == nil {
		return nil, errors.New("invalid value for required argument 'Header'")
	}
	if args.Owner == nil {
		return nil, errors.New("invalid value for required argument 'Owner'")
	}
	if args.Services == nil {
		return nil, errors.New("invalid value for required argument 'Services'")
	}
	if args.TeamId == nil {
		return nil, errors.New("invalid value for required argument 'TeamId'")
	}
	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Sebform
	err := ctx.RegisterResource("squadcast:index/sebform:Sebform", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSebform gets an existing Sebform resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSebform(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SebformState, opts ...pulumi.ResourceOption) (*Sebform, error) {
	var resource Sebform
	err := ctx.ReadResource("squadcast:index/sebform:Sebform", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Sebform resources.
type sebformState struct {
	// Custom domain name (URL).
	CustomDomainName *string `pulumi:"customDomainName"`
	// Description of the Webform.
	Description *string `pulumi:"description"`
	// Defines when to send email to the reporter (triggered, acknowledged, resolved).
	EmailOns []string `pulumi:"emailOns"`
	// Footer link.
	FooterLink *string `pulumi:"footerLink"`
	// Footer text.
	FooterText *string `pulumi:"footerText"`
	// Webform header.
	Header *string `pulumi:"header"`
	// Input Fields added to Webforms. Added as tags to incident based on selection.
	InputFields []SebformInputField `pulumi:"inputFields"`
	// Name of the Webform.
	Name *string `pulumi:"name"`
	// Form owner.
	Owner *SebformOwner `pulumi:"owner"`
	// Public URL of the Webform.
	PublicUrl *string `pulumi:"publicUrl"`
	// Services added to Webform.
	Services []SebformService `pulumi:"services"`
	// Severity of the incident.
	//
	// Deprecated: Use `input_field` instead of `severity`.
	Severities []SebformSeverity `pulumi:"severities"`
	// Webform Tags.
	Tags map[string]string `pulumi:"tags"`
	// Team id.
	TeamId *string `pulumi:"teamId"`
	// Webform title (public).
	Title *string `pulumi:"title"`
}

type SebformState struct {
	// Custom domain name (URL).
	CustomDomainName pulumi.StringPtrInput
	// Description of the Webform.
	Description pulumi.StringPtrInput
	// Defines when to send email to the reporter (triggered, acknowledged, resolved).
	EmailOns pulumi.StringArrayInput
	// Footer link.
	FooterLink pulumi.StringPtrInput
	// Footer text.
	FooterText pulumi.StringPtrInput
	// Webform header.
	Header pulumi.StringPtrInput
	// Input Fields added to Webforms. Added as tags to incident based on selection.
	InputFields SebformInputFieldArrayInput
	// Name of the Webform.
	Name pulumi.StringPtrInput
	// Form owner.
	Owner SebformOwnerPtrInput
	// Public URL of the Webform.
	PublicUrl pulumi.StringPtrInput
	// Services added to Webform.
	Services SebformServiceArrayInput
	// Severity of the incident.
	//
	// Deprecated: Use `input_field` instead of `severity`.
	Severities SebformSeverityArrayInput
	// Webform Tags.
	Tags pulumi.StringMapInput
	// Team id.
	TeamId pulumi.StringPtrInput
	// Webform title (public).
	Title pulumi.StringPtrInput
}

func (SebformState) ElementType() reflect.Type {
	return reflect.TypeOf((*sebformState)(nil)).Elem()
}

type sebformArgs struct {
	// Custom domain name (URL).
	CustomDomainName *string `pulumi:"customDomainName"`
	// Description of the Webform.
	Description *string `pulumi:"description"`
	// Defines when to send email to the reporter (triggered, acknowledged, resolved).
	EmailOns []string `pulumi:"emailOns"`
	// Footer link.
	FooterLink *string `pulumi:"footerLink"`
	// Footer text.
	FooterText *string `pulumi:"footerText"`
	// Webform header.
	Header string `pulumi:"header"`
	// Input Fields added to Webforms. Added as tags to incident based on selection.
	InputFields []SebformInputField `pulumi:"inputFields"`
	// Name of the Webform.
	Name *string `pulumi:"name"`
	// Form owner.
	Owner SebformOwner `pulumi:"owner"`
	// Services added to Webform.
	Services []SebformService `pulumi:"services"`
	// Severity of the incident.
	//
	// Deprecated: Use `input_field` instead of `severity`.
	Severities []SebformSeverity `pulumi:"severities"`
	// Webform Tags.
	Tags map[string]string `pulumi:"tags"`
	// Team id.
	TeamId string `pulumi:"teamId"`
	// Webform title (public).
	Title string `pulumi:"title"`
}

// The set of arguments for constructing a Sebform resource.
type SebformArgs struct {
	// Custom domain name (URL).
	CustomDomainName pulumi.StringPtrInput
	// Description of the Webform.
	Description pulumi.StringPtrInput
	// Defines when to send email to the reporter (triggered, acknowledged, resolved).
	EmailOns pulumi.StringArrayInput
	// Footer link.
	FooterLink pulumi.StringPtrInput
	// Footer text.
	FooterText pulumi.StringPtrInput
	// Webform header.
	Header pulumi.StringInput
	// Input Fields added to Webforms. Added as tags to incident based on selection.
	InputFields SebformInputFieldArrayInput
	// Name of the Webform.
	Name pulumi.StringPtrInput
	// Form owner.
	Owner SebformOwnerInput
	// Services added to Webform.
	Services SebformServiceArrayInput
	// Severity of the incident.
	//
	// Deprecated: Use `input_field` instead of `severity`.
	Severities SebformSeverityArrayInput
	// Webform Tags.
	Tags pulumi.StringMapInput
	// Team id.
	TeamId pulumi.StringInput
	// Webform title (public).
	Title pulumi.StringInput
}

func (SebformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sebformArgs)(nil)).Elem()
}

type SebformInput interface {
	pulumi.Input

	ToSebformOutput() SebformOutput
	ToSebformOutputWithContext(ctx context.Context) SebformOutput
}

func (*Sebform) ElementType() reflect.Type {
	return reflect.TypeOf((**Sebform)(nil)).Elem()
}

func (i *Sebform) ToSebformOutput() SebformOutput {
	return i.ToSebformOutputWithContext(context.Background())
}

func (i *Sebform) ToSebformOutputWithContext(ctx context.Context) SebformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SebformOutput)
}

// SebformArrayInput is an input type that accepts SebformArray and SebformArrayOutput values.
// You can construct a concrete instance of `SebformArrayInput` via:
//
//	SebformArray{ SebformArgs{...} }
type SebformArrayInput interface {
	pulumi.Input

	ToSebformArrayOutput() SebformArrayOutput
	ToSebformArrayOutputWithContext(context.Context) SebformArrayOutput
}

type SebformArray []SebformInput

func (SebformArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Sebform)(nil)).Elem()
}

func (i SebformArray) ToSebformArrayOutput() SebformArrayOutput {
	return i.ToSebformArrayOutputWithContext(context.Background())
}

func (i SebformArray) ToSebformArrayOutputWithContext(ctx context.Context) SebformArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SebformArrayOutput)
}

// SebformMapInput is an input type that accepts SebformMap and SebformMapOutput values.
// You can construct a concrete instance of `SebformMapInput` via:
//
//	SebformMap{ "key": SebformArgs{...} }
type SebformMapInput interface {
	pulumi.Input

	ToSebformMapOutput() SebformMapOutput
	ToSebformMapOutputWithContext(context.Context) SebformMapOutput
}

type SebformMap map[string]SebformInput

func (SebformMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Sebform)(nil)).Elem()
}

func (i SebformMap) ToSebformMapOutput() SebformMapOutput {
	return i.ToSebformMapOutputWithContext(context.Background())
}

func (i SebformMap) ToSebformMapOutputWithContext(ctx context.Context) SebformMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SebformMapOutput)
}

type SebformOutput struct{ *pulumi.OutputState }

func (SebformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sebform)(nil)).Elem()
}

func (o SebformOutput) ToSebformOutput() SebformOutput {
	return o
}

func (o SebformOutput) ToSebformOutputWithContext(ctx context.Context) SebformOutput {
	return o
}

// Custom domain name (URL).
func (o SebformOutput) CustomDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringPtrOutput { return v.CustomDomainName }).(pulumi.StringPtrOutput)
}

// Description of the Webform.
func (o SebformOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Defines when to send email to the reporter (triggered, acknowledged, resolved).
func (o SebformOutput) EmailOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringArrayOutput { return v.EmailOns }).(pulumi.StringArrayOutput)
}

// Footer link.
func (o SebformOutput) FooterLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringPtrOutput { return v.FooterLink }).(pulumi.StringPtrOutput)
}

// Footer text.
func (o SebformOutput) FooterText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringPtrOutput { return v.FooterText }).(pulumi.StringPtrOutput)
}

// Webform header.
func (o SebformOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Input Fields added to Webforms. Added as tags to incident based on selection.
func (o SebformOutput) InputFields() SebformInputFieldArrayOutput {
	return o.ApplyT(func(v *Sebform) SebformInputFieldArrayOutput { return v.InputFields }).(SebformInputFieldArrayOutput)
}

// Name of the Webform.
func (o SebformOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Form owner.
func (o SebformOutput) Owner() SebformOwnerOutput {
	return o.ApplyT(func(v *Sebform) SebformOwnerOutput { return v.Owner }).(SebformOwnerOutput)
}

// Public URL of the Webform.
func (o SebformOutput) PublicUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringOutput { return v.PublicUrl }).(pulumi.StringOutput)
}

// Services added to Webform.
func (o SebformOutput) Services() SebformServiceArrayOutput {
	return o.ApplyT(func(v *Sebform) SebformServiceArrayOutput { return v.Services }).(SebformServiceArrayOutput)
}

// Severity of the incident.
//
// Deprecated: Use `input_field` instead of `severity`.
func (o SebformOutput) Severities() SebformSeverityArrayOutput {
	return o.ApplyT(func(v *Sebform) SebformSeverityArrayOutput { return v.Severities }).(SebformSeverityArrayOutput)
}

// Webform Tags.
func (o SebformOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Team id.
func (o SebformOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringOutput { return v.TeamId }).(pulumi.StringOutput)
}

// Webform title (public).
func (o SebformOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *Sebform) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

type SebformArrayOutput struct{ *pulumi.OutputState }

func (SebformArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Sebform)(nil)).Elem()
}

func (o SebformArrayOutput) ToSebformArrayOutput() SebformArrayOutput {
	return o
}

func (o SebformArrayOutput) ToSebformArrayOutputWithContext(ctx context.Context) SebformArrayOutput {
	return o
}

func (o SebformArrayOutput) Index(i pulumi.IntInput) SebformOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Sebform {
		return vs[0].([]*Sebform)[vs[1].(int)]
	}).(SebformOutput)
}

type SebformMapOutput struct{ *pulumi.OutputState }

func (SebformMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Sebform)(nil)).Elem()
}

func (o SebformMapOutput) ToSebformMapOutput() SebformMapOutput {
	return o
}

func (o SebformMapOutput) ToSebformMapOutputWithContext(ctx context.Context) SebformMapOutput {
	return o
}

func (o SebformMapOutput) MapIndex(k pulumi.StringInput) SebformOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Sebform {
		return vs[0].(map[string]*Sebform)[vs[1].(string)]
	}).(SebformOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SebformInput)(nil)).Elem(), &Sebform{})
	pulumi.RegisterInputType(reflect.TypeOf((*SebformArrayInput)(nil)).Elem(), SebformArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SebformMapInput)(nil)).Elem(), SebformMap{})
	pulumi.RegisterOutputType(SebformOutput{})
	pulumi.RegisterOutputType(SebformArrayOutput{})
	pulumi.RegisterOutputType(SebformMapOutput{})
}
