// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squadcast

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/valisinsights/pulumi-squadcast/sdk/go/squadcast/internal"
)

// [Suppression rules](https://support.squadcast.com/docs/alert-suppression) can help you avoid alert fatigue by suppressing notifications for non-actionable alerts.Squadcast will suppress the incidents that match any of the Suppression Rules you create for your Services. These incidents will go into the Suppressed state and you will not get any notifications for them
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/valisinsights/pulumi-squadcast/sdk/go/squadcast"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleTeam, err := squadcast.LookupTeam(ctx, &squadcast.LookupTeamArgs{
//				Name: "exammple team name",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleService, err := squadcast.LookupService(ctx, &squadcast.LookupServiceArgs{
//				Name:   "example service name",
//				TeamId: exampleTeam.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = squadcast.NewSuppressionRules(ctx, "exampleSuppressionRules", &squadcast.SuppressionRulesArgs{
//				TeamId:    *pulumi.String(exampleTeam.Id),
//				ServiceId: *pulumi.String(exampleService.Id),
//				Rules: squadcast.SuppressionRulesRuleArray{
//					&squadcast.SuppressionRulesRuleArgs{
//						IsBasic:     pulumi.Bool(false),
//						Description: pulumi.String("not basic"),
//						Expression:  pulumi.String("payload[\"event_id\"] == 40"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = squadcast.NewSuppressionRules(ctx, "exampleTimeBasedSuppressionRules", &squadcast.SuppressionRulesArgs{
//				TeamId:    *pulumi.String(exampleTeam.Id),
//				ServiceId: *pulumi.String(exampleService.Id),
//				Rules: squadcast.SuppressionRulesRuleArray{
//					&squadcast.SuppressionRulesRuleArgs{
//						IsBasic:     pulumi.Bool(false),
//						Description: pulumi.String("not basic"),
//						Expression:  pulumi.String("payload[\"event_id\"] == 40"),
//						Timeslots: squadcast.SuppressionRulesRuleTimeslotArray{
//							&squadcast.SuppressionRulesRuleTimeslotArgs{
//								TimeZone:   pulumi.String("Asia/Calcutta"),
//								StartTime:  pulumi.String("2022-04-08T06:22:14.975Z"),
//								EndTime:    pulumi.String("2022-04-28T06:22:14.975Z"),
//								EndsOn:     pulumi.String("2022-04-28T06:22:14.975Z"),
//								Repetition: pulumi.String("none"),
//								IsAllday:   pulumi.Bool(false),
//								EndsNever:  pulumi.Bool(true),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = squadcast.NewSuppressionRules(ctx, "exampleTimeBasedSuppressionRulesCustomRepetition", &squadcast.SuppressionRulesArgs{
//				TeamId:    *pulumi.String(exampleTeam.Id),
//				ServiceId: *pulumi.String(exampleService.Id),
//				Rules: squadcast.SuppressionRulesRuleArray{
//					&squadcast.SuppressionRulesRuleArgs{
//						IsBasic:     pulumi.Bool(false),
//						Description: pulumi.String("not basic"),
//						Expression:  pulumi.String("payload[\"event_id\"] == 40"),
//						Timeslots: squadcast.SuppressionRulesRuleTimeslotArray{
//							&squadcast.SuppressionRulesRuleTimeslotArgs{
//								TimeZone:   pulumi.String("Asia/Calcutta"),
//								StartTime:  pulumi.String("2022-04-08T06:22:14.975Z"),
//								EndTime:    pulumi.String("2022-04-28T06:22:14.975Z"),
//								EndsOn:     pulumi.String("2022-04-28T06:22:14.975Z"),
//								Repetition: pulumi.String("custom"),
//								IsAllday:   pulumi.Bool(false),
//								EndsNever:  pulumi.Bool(true),
//								Customs: squadcast.SuppressionRulesRuleTimeslotCustomArray{
//									&squadcast.SuppressionRulesRuleTimeslotCustomArgs{
//										Repeats:      pulumi.String("day"),
//										RepeatsCount: pulumi.Int(2),
//									},
//								},
//							},
//							&squadcast.SuppressionRulesRuleTimeslotArgs{
//								TimeZone:   pulumi.String("Asia/Calcutta"),
//								StartTime:  pulumi.String("2022-04-08T06:22:14.975Z"),
//								EndTime:    pulumi.String("2022-04-28T06:22:14.975Z"),
//								EndsOn:     pulumi.String("2022-04-28T06:22:14.975Z"),
//								Repetition: pulumi.String("custom"),
//								IsAllday:   pulumi.Bool(false),
//								EndsNever:  pulumi.Bool(true),
//								Customs: squadcast.SuppressionRulesRuleTimeslotCustomArray{
//									&squadcast.SuppressionRulesRuleTimeslotCustomArgs{
//										Repeats:      pulumi.String("week"),
//										RepeatsCount: pulumi.Int(4),
//										RepeatsOnWeekdays: pulumi.IntArray{
//											pulumi.Int(0),
//											pulumi.Int(1),
//											pulumi.Int(2),
//											pulumi.Int(3),
//										},
//									},
//								},
//							},
//							&squadcast.SuppressionRulesRuleTimeslotArgs{
//								TimeZone:   pulumi.String("Asia/Calcutta"),
//								StartTime:  pulumi.String("2022-04-08T06:22:14.975Z"),
//								EndTime:    pulumi.String("2022-04-28T06:22:14.975Z"),
//								EndsOn:     pulumi.String("2022-04-28T06:22:14.975Z"),
//								Repetition: pulumi.String("custom"),
//								IsAllday:   pulumi.Bool(false),
//								EndsNever:  pulumi.Bool(true),
//								Customs: squadcast.SuppressionRulesRuleTimeslotCustomArray{
//									&squadcast.SuppressionRulesRuleTimeslotCustomArgs{
//										Repeats:      pulumi.String("month"),
//										RepeatsCount: pulumi.Int(6),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// teamID:serviceID Use 'Get All Teams' and 'Get All Services' APIs to get the id of the team and service respectively
//
// ```sh
//
//	$ pulumi import squadcast:index/suppressionRules:SuppressionRules test 62d2fe23a57381088224d726:62da76c088f407f9ca756ca5
//
// ```
type SuppressionRules struct {
	pulumi.CustomResourceState

	Rules SuppressionRulesRuleArrayOutput `pulumi:"rules"`
	// Service id.
	ServiceId pulumi.StringOutput `pulumi:"serviceId"`
	// Team id.
	TeamId pulumi.StringOutput `pulumi:"teamId"`
}

// NewSuppressionRules registers a new resource with the given unique name, arguments, and options.
func NewSuppressionRules(ctx *pulumi.Context,
	name string, args *SuppressionRulesArgs, opts ...pulumi.ResourceOption) (*SuppressionRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	if args.TeamId == nil {
		return nil, errors.New("invalid value for required argument 'TeamId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SuppressionRules
	err := ctx.RegisterResource("squadcast:index/suppressionRules:SuppressionRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSuppressionRules gets an existing SuppressionRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSuppressionRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SuppressionRulesState, opts ...pulumi.ResourceOption) (*SuppressionRules, error) {
	var resource SuppressionRules
	err := ctx.ReadResource("squadcast:index/suppressionRules:SuppressionRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SuppressionRules resources.
type suppressionRulesState struct {
	Rules []SuppressionRulesRule `pulumi:"rules"`
	// Service id.
	ServiceId *string `pulumi:"serviceId"`
	// Team id.
	TeamId *string `pulumi:"teamId"`
}

type SuppressionRulesState struct {
	Rules SuppressionRulesRuleArrayInput
	// Service id.
	ServiceId pulumi.StringPtrInput
	// Team id.
	TeamId pulumi.StringPtrInput
}

func (SuppressionRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*suppressionRulesState)(nil)).Elem()
}

type suppressionRulesArgs struct {
	Rules []SuppressionRulesRule `pulumi:"rules"`
	// Service id.
	ServiceId string `pulumi:"serviceId"`
	// Team id.
	TeamId string `pulumi:"teamId"`
}

// The set of arguments for constructing a SuppressionRules resource.
type SuppressionRulesArgs struct {
	Rules SuppressionRulesRuleArrayInput
	// Service id.
	ServiceId pulumi.StringInput
	// Team id.
	TeamId pulumi.StringInput
}

func (SuppressionRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*suppressionRulesArgs)(nil)).Elem()
}

type SuppressionRulesInput interface {
	pulumi.Input

	ToSuppressionRulesOutput() SuppressionRulesOutput
	ToSuppressionRulesOutputWithContext(ctx context.Context) SuppressionRulesOutput
}

func (*SuppressionRules) ElementType() reflect.Type {
	return reflect.TypeOf((**SuppressionRules)(nil)).Elem()
}

func (i *SuppressionRules) ToSuppressionRulesOutput() SuppressionRulesOutput {
	return i.ToSuppressionRulesOutputWithContext(context.Background())
}

func (i *SuppressionRules) ToSuppressionRulesOutputWithContext(ctx context.Context) SuppressionRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuppressionRulesOutput)
}

// SuppressionRulesArrayInput is an input type that accepts SuppressionRulesArray and SuppressionRulesArrayOutput values.
// You can construct a concrete instance of `SuppressionRulesArrayInput` via:
//
//	SuppressionRulesArray{ SuppressionRulesArgs{...} }
type SuppressionRulesArrayInput interface {
	pulumi.Input

	ToSuppressionRulesArrayOutput() SuppressionRulesArrayOutput
	ToSuppressionRulesArrayOutputWithContext(context.Context) SuppressionRulesArrayOutput
}

type SuppressionRulesArray []SuppressionRulesInput

func (SuppressionRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SuppressionRules)(nil)).Elem()
}

func (i SuppressionRulesArray) ToSuppressionRulesArrayOutput() SuppressionRulesArrayOutput {
	return i.ToSuppressionRulesArrayOutputWithContext(context.Background())
}

func (i SuppressionRulesArray) ToSuppressionRulesArrayOutputWithContext(ctx context.Context) SuppressionRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuppressionRulesArrayOutput)
}

// SuppressionRulesMapInput is an input type that accepts SuppressionRulesMap and SuppressionRulesMapOutput values.
// You can construct a concrete instance of `SuppressionRulesMapInput` via:
//
//	SuppressionRulesMap{ "key": SuppressionRulesArgs{...} }
type SuppressionRulesMapInput interface {
	pulumi.Input

	ToSuppressionRulesMapOutput() SuppressionRulesMapOutput
	ToSuppressionRulesMapOutputWithContext(context.Context) SuppressionRulesMapOutput
}

type SuppressionRulesMap map[string]SuppressionRulesInput

func (SuppressionRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SuppressionRules)(nil)).Elem()
}

func (i SuppressionRulesMap) ToSuppressionRulesMapOutput() SuppressionRulesMapOutput {
	return i.ToSuppressionRulesMapOutputWithContext(context.Background())
}

func (i SuppressionRulesMap) ToSuppressionRulesMapOutputWithContext(ctx context.Context) SuppressionRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuppressionRulesMapOutput)
}

type SuppressionRulesOutput struct{ *pulumi.OutputState }

func (SuppressionRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SuppressionRules)(nil)).Elem()
}

func (o SuppressionRulesOutput) ToSuppressionRulesOutput() SuppressionRulesOutput {
	return o
}

func (o SuppressionRulesOutput) ToSuppressionRulesOutputWithContext(ctx context.Context) SuppressionRulesOutput {
	return o
}

func (o SuppressionRulesOutput) Rules() SuppressionRulesRuleArrayOutput {
	return o.ApplyT(func(v *SuppressionRules) SuppressionRulesRuleArrayOutput { return v.Rules }).(SuppressionRulesRuleArrayOutput)
}

// Service id.
func (o SuppressionRulesOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SuppressionRules) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

// Team id.
func (o SuppressionRulesOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v *SuppressionRules) pulumi.StringOutput { return v.TeamId }).(pulumi.StringOutput)
}

type SuppressionRulesArrayOutput struct{ *pulumi.OutputState }

func (SuppressionRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SuppressionRules)(nil)).Elem()
}

func (o SuppressionRulesArrayOutput) ToSuppressionRulesArrayOutput() SuppressionRulesArrayOutput {
	return o
}

func (o SuppressionRulesArrayOutput) ToSuppressionRulesArrayOutputWithContext(ctx context.Context) SuppressionRulesArrayOutput {
	return o
}

func (o SuppressionRulesArrayOutput) Index(i pulumi.IntInput) SuppressionRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SuppressionRules {
		return vs[0].([]*SuppressionRules)[vs[1].(int)]
	}).(SuppressionRulesOutput)
}

type SuppressionRulesMapOutput struct{ *pulumi.OutputState }

func (SuppressionRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SuppressionRules)(nil)).Elem()
}

func (o SuppressionRulesMapOutput) ToSuppressionRulesMapOutput() SuppressionRulesMapOutput {
	return o
}

func (o SuppressionRulesMapOutput) ToSuppressionRulesMapOutputWithContext(ctx context.Context) SuppressionRulesMapOutput {
	return o
}

func (o SuppressionRulesMapOutput) MapIndex(k pulumi.StringInput) SuppressionRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SuppressionRules {
		return vs[0].(map[string]*SuppressionRules)[vs[1].(string)]
	}).(SuppressionRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SuppressionRulesInput)(nil)).Elem(), &SuppressionRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*SuppressionRulesArrayInput)(nil)).Elem(), SuppressionRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SuppressionRulesMapInput)(nil)).Elem(), SuppressionRulesMap{})
	pulumi.RegisterOutputType(SuppressionRulesOutput{})
	pulumi.RegisterOutputType(SuppressionRulesArrayOutput{})
	pulumi.RegisterOutputType(SuppressionRulesMapOutput{})
}
