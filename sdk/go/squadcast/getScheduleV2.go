// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squadcast

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/valisinsights/pulumi-squadcast/sdk/go/squadcast/internal"
)

// [Squadcast schedules](https://support.squadcast.com/docs/schedules) are used to manage on-call scheduling & determine who will be notified when an incident is triggered. Use this data source to get information about a specific schedule that you can use for other Squadcast resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/valisinsights/pulumi-squadcast/sdk/go/squadcast"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := squadcast.LookupScheduleV2(ctx, &squadcast.LookupScheduleV2Args{
//				Name:   squadcast_schedule_v2.Test.Name,
//				TeamId: "team_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupScheduleV2(ctx *pulumi.Context, args *LookupScheduleV2Args, opts ...pulumi.InvokeOption) (*LookupScheduleV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupScheduleV2Result
	err := ctx.Invoke("squadcast:index/getScheduleV2:getScheduleV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScheduleV2.
type LookupScheduleV2Args struct {
	// Name of the Schedule.
	Name string `pulumi:"name"`
	// Team id.
	TeamId string `pulumi:"teamId"`
}

// A collection of values returned by getScheduleV2.
type LookupScheduleV2Result struct {
	// Detailed description about the schedule.
	Description string `pulumi:"description"`
	// Schedule owner.
	EntityOwners []GetScheduleV2EntityOwner `pulumi:"entityOwners"`
	// Schedule id.
	Id string `pulumi:"id"`
	// Name of the Schedule.
	Name string `pulumi:"name"`
	// Schedule tags.
	Tags []GetScheduleV2Tag `pulumi:"tags"`
	// Team id.
	TeamId string `pulumi:"teamId"`
	// Timezone for the schedule.
	Timezone string `pulumi:"timezone"`
}

func LookupScheduleV2Output(ctx *pulumi.Context, args LookupScheduleV2OutputArgs, opts ...pulumi.InvokeOption) LookupScheduleV2ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupScheduleV2Result, error) {
			args := v.(LookupScheduleV2Args)
			r, err := LookupScheduleV2(ctx, &args, opts...)
			var s LookupScheduleV2Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupScheduleV2ResultOutput)
}

// A collection of arguments for invoking getScheduleV2.
type LookupScheduleV2OutputArgs struct {
	// Name of the Schedule.
	Name pulumi.StringInput `pulumi:"name"`
	// Team id.
	TeamId pulumi.StringInput `pulumi:"teamId"`
}

func (LookupScheduleV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduleV2Args)(nil)).Elem()
}

// A collection of values returned by getScheduleV2.
type LookupScheduleV2ResultOutput struct{ *pulumi.OutputState }

func (LookupScheduleV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduleV2Result)(nil)).Elem()
}

func (o LookupScheduleV2ResultOutput) ToLookupScheduleV2ResultOutput() LookupScheduleV2ResultOutput {
	return o
}

func (o LookupScheduleV2ResultOutput) ToLookupScheduleV2ResultOutputWithContext(ctx context.Context) LookupScheduleV2ResultOutput {
	return o
}

// Detailed description about the schedule.
func (o LookupScheduleV2ResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleV2Result) string { return v.Description }).(pulumi.StringOutput)
}

// Schedule owner.
func (o LookupScheduleV2ResultOutput) EntityOwners() GetScheduleV2EntityOwnerArrayOutput {
	return o.ApplyT(func(v LookupScheduleV2Result) []GetScheduleV2EntityOwner { return v.EntityOwners }).(GetScheduleV2EntityOwnerArrayOutput)
}

// Schedule id.
func (o LookupScheduleV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Schedule.
func (o LookupScheduleV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// Schedule tags.
func (o LookupScheduleV2ResultOutput) Tags() GetScheduleV2TagArrayOutput {
	return o.ApplyT(func(v LookupScheduleV2Result) []GetScheduleV2Tag { return v.Tags }).(GetScheduleV2TagArrayOutput)
}

// Team id.
func (o LookupScheduleV2ResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleV2Result) string { return v.TeamId }).(pulumi.StringOutput)
}

// Timezone for the schedule.
func (o LookupScheduleV2ResultOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleV2Result) string { return v.Timezone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScheduleV2ResultOutput{})
}
