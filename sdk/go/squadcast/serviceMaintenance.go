// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squadcast

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/valisinsights/pulumi-squadcast/sdk/go/squadcast/internal"
)

// [Maintenance Mode](https://support.squadcast.com/docs/maintenance-mode) enables you to reduce alert noise during the scheduled maintenance window. Alerts generated during active maintenance windows would be automatically suppressed and hence, no notifications are generated for those suppressed alerts.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/valisinsights/pulumi-squadcast/sdk/go/squadcast"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleTeam, err := squadcast.LookupTeam(ctx, &squadcast.LookupTeamArgs{
//				Name: "example team name",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleService, err := squadcast.LookupService(ctx, &squadcast.LookupServiceArgs{
//				Name:   "example service name",
//				TeamId: exampleTeam.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = squadcast.NewServiceMaintenance(ctx, "exampleServiceMaintenance", &squadcast.ServiceMaintenanceArgs{
//				ServiceId: *pulumi.String(exampleService.Id),
//				Windows: squadcast.ServiceMaintenanceWindowArray{
//					&squadcast.ServiceMaintenanceWindowArgs{
//						From:            pulumi.String("2032-06-01T10:30:00.000Z"),
//						Till:            pulumi.String("2032-06-01T11:30:00.000Z"),
//						RepeatTill:      pulumi.String("2032-06-30T10:30:00.000Z"),
//						RepeatFrequency: pulumi.String("week"),
//					},
//					&squadcast.ServiceMaintenanceWindowArgs{
//						From: pulumi.String("2032-07-01T10:30:00.000Z"),
//						Till: pulumi.String("2032-07-02T10:30:00.000Z"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// teamID:serviceID Use 'Get All Teams' and 'Get All Services' APIs to get the id of the team and service respectively
//
// ```sh
//
//	$ pulumi import squadcast:index/serviceMaintenance:ServiceMaintenance test 62d2fe23a57381088224d726:62da76c088f407f9ca756ca5
//
// ```
type ServiceMaintenance struct {
	pulumi.CustomResourceState

	// Service id.
	ServiceId pulumi.StringOutput `pulumi:"serviceId"`
	// Date and Time range during which maintenance would be carried out
	Windows ServiceMaintenanceWindowArrayOutput `pulumi:"windows"`
}

// NewServiceMaintenance registers a new resource with the given unique name, arguments, and options.
func NewServiceMaintenance(ctx *pulumi.Context,
	name string, args *ServiceMaintenanceArgs, opts ...pulumi.ResourceOption) (*ServiceMaintenance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceMaintenance
	err := ctx.RegisterResource("squadcast:index/serviceMaintenance:ServiceMaintenance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceMaintenance gets an existing ServiceMaintenance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceMaintenance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceMaintenanceState, opts ...pulumi.ResourceOption) (*ServiceMaintenance, error) {
	var resource ServiceMaintenance
	err := ctx.ReadResource("squadcast:index/serviceMaintenance:ServiceMaintenance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceMaintenance resources.
type serviceMaintenanceState struct {
	// Service id.
	ServiceId *string `pulumi:"serviceId"`
	// Date and Time range during which maintenance would be carried out
	Windows []ServiceMaintenanceWindow `pulumi:"windows"`
}

type ServiceMaintenanceState struct {
	// Service id.
	ServiceId pulumi.StringPtrInput
	// Date and Time range during which maintenance would be carried out
	Windows ServiceMaintenanceWindowArrayInput
}

func (ServiceMaintenanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceMaintenanceState)(nil)).Elem()
}

type serviceMaintenanceArgs struct {
	// Service id.
	ServiceId string `pulumi:"serviceId"`
	// Date and Time range during which maintenance would be carried out
	Windows []ServiceMaintenanceWindow `pulumi:"windows"`
}

// The set of arguments for constructing a ServiceMaintenance resource.
type ServiceMaintenanceArgs struct {
	// Service id.
	ServiceId pulumi.StringInput
	// Date and Time range during which maintenance would be carried out
	Windows ServiceMaintenanceWindowArrayInput
}

func (ServiceMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceMaintenanceArgs)(nil)).Elem()
}

type ServiceMaintenanceInput interface {
	pulumi.Input

	ToServiceMaintenanceOutput() ServiceMaintenanceOutput
	ToServiceMaintenanceOutputWithContext(ctx context.Context) ServiceMaintenanceOutput
}

func (*ServiceMaintenance) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMaintenance)(nil)).Elem()
}

func (i *ServiceMaintenance) ToServiceMaintenanceOutput() ServiceMaintenanceOutput {
	return i.ToServiceMaintenanceOutputWithContext(context.Background())
}

func (i *ServiceMaintenance) ToServiceMaintenanceOutputWithContext(ctx context.Context) ServiceMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMaintenanceOutput)
}

// ServiceMaintenanceArrayInput is an input type that accepts ServiceMaintenanceArray and ServiceMaintenanceArrayOutput values.
// You can construct a concrete instance of `ServiceMaintenanceArrayInput` via:
//
//	ServiceMaintenanceArray{ ServiceMaintenanceArgs{...} }
type ServiceMaintenanceArrayInput interface {
	pulumi.Input

	ToServiceMaintenanceArrayOutput() ServiceMaintenanceArrayOutput
	ToServiceMaintenanceArrayOutputWithContext(context.Context) ServiceMaintenanceArrayOutput
}

type ServiceMaintenanceArray []ServiceMaintenanceInput

func (ServiceMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceMaintenance)(nil)).Elem()
}

func (i ServiceMaintenanceArray) ToServiceMaintenanceArrayOutput() ServiceMaintenanceArrayOutput {
	return i.ToServiceMaintenanceArrayOutputWithContext(context.Background())
}

func (i ServiceMaintenanceArray) ToServiceMaintenanceArrayOutputWithContext(ctx context.Context) ServiceMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMaintenanceArrayOutput)
}

// ServiceMaintenanceMapInput is an input type that accepts ServiceMaintenanceMap and ServiceMaintenanceMapOutput values.
// You can construct a concrete instance of `ServiceMaintenanceMapInput` via:
//
//	ServiceMaintenanceMap{ "key": ServiceMaintenanceArgs{...} }
type ServiceMaintenanceMapInput interface {
	pulumi.Input

	ToServiceMaintenanceMapOutput() ServiceMaintenanceMapOutput
	ToServiceMaintenanceMapOutputWithContext(context.Context) ServiceMaintenanceMapOutput
}

type ServiceMaintenanceMap map[string]ServiceMaintenanceInput

func (ServiceMaintenanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceMaintenance)(nil)).Elem()
}

func (i ServiceMaintenanceMap) ToServiceMaintenanceMapOutput() ServiceMaintenanceMapOutput {
	return i.ToServiceMaintenanceMapOutputWithContext(context.Background())
}

func (i ServiceMaintenanceMap) ToServiceMaintenanceMapOutputWithContext(ctx context.Context) ServiceMaintenanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMaintenanceMapOutput)
}

type ServiceMaintenanceOutput struct{ *pulumi.OutputState }

func (ServiceMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMaintenance)(nil)).Elem()
}

func (o ServiceMaintenanceOutput) ToServiceMaintenanceOutput() ServiceMaintenanceOutput {
	return o
}

func (o ServiceMaintenanceOutput) ToServiceMaintenanceOutputWithContext(ctx context.Context) ServiceMaintenanceOutput {
	return o
}

// Service id.
func (o ServiceMaintenanceOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceMaintenance) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

// Date and Time range during which maintenance would be carried out
func (o ServiceMaintenanceOutput) Windows() ServiceMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *ServiceMaintenance) ServiceMaintenanceWindowArrayOutput { return v.Windows }).(ServiceMaintenanceWindowArrayOutput)
}

type ServiceMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (ServiceMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceMaintenance)(nil)).Elem()
}

func (o ServiceMaintenanceArrayOutput) ToServiceMaintenanceArrayOutput() ServiceMaintenanceArrayOutput {
	return o
}

func (o ServiceMaintenanceArrayOutput) ToServiceMaintenanceArrayOutputWithContext(ctx context.Context) ServiceMaintenanceArrayOutput {
	return o
}

func (o ServiceMaintenanceArrayOutput) Index(i pulumi.IntInput) ServiceMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceMaintenance {
		return vs[0].([]*ServiceMaintenance)[vs[1].(int)]
	}).(ServiceMaintenanceOutput)
}

type ServiceMaintenanceMapOutput struct{ *pulumi.OutputState }

func (ServiceMaintenanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceMaintenance)(nil)).Elem()
}

func (o ServiceMaintenanceMapOutput) ToServiceMaintenanceMapOutput() ServiceMaintenanceMapOutput {
	return o
}

func (o ServiceMaintenanceMapOutput) ToServiceMaintenanceMapOutputWithContext(ctx context.Context) ServiceMaintenanceMapOutput {
	return o
}

func (o ServiceMaintenanceMapOutput) MapIndex(k pulumi.StringInput) ServiceMaintenanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceMaintenance {
		return vs[0].(map[string]*ServiceMaintenance)[vs[1].(string)]
	}).(ServiceMaintenanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMaintenanceInput)(nil)).Elem(), &ServiceMaintenance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMaintenanceArrayInput)(nil)).Elem(), ServiceMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMaintenanceMapInput)(nil)).Elem(), ServiceMaintenanceMap{})
	pulumi.RegisterOutputType(ServiceMaintenanceOutput{})
	pulumi.RegisterOutputType(ServiceMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(ServiceMaintenanceMapOutput{})
}
