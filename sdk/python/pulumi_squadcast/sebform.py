# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SebformArgs', 'Sebform']

@pulumi.input_type
class SebformArgs:
    def __init__(__self__, *,
                 header: pulumi.Input[str],
                 owner: pulumi.Input['SebformOwnerArgs'],
                 services: pulumi.Input[Sequence[pulumi.Input['SebformServiceArgs']]],
                 team_id: pulumi.Input[str],
                 title: pulumi.Input[str],
                 custom_domain_name: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 email_ons: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 footer_link: Optional[pulumi.Input[str]] = None,
                 footer_text: Optional[pulumi.Input[str]] = None,
                 input_fields: Optional[pulumi.Input[Sequence[pulumi.Input['SebformInputFieldArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 severities: Optional[pulumi.Input[Sequence[pulumi.Input['SebformSeverityArgs']]]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a Sebform resource.
        :param pulumi.Input[str] header: Webform header.
        :param pulumi.Input['SebformOwnerArgs'] owner: Form owner.
        :param pulumi.Input[Sequence[pulumi.Input['SebformServiceArgs']]] services: Services added to Webform.
        :param pulumi.Input[str] team_id: Team id.
        :param pulumi.Input[str] title: Webform title (public).
        :param pulumi.Input[str] custom_domain_name: Custom domain name (URL).
        :param pulumi.Input[str] description: Description of the Webform.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] email_ons: Defines when to send email to the reporter (triggered, acknowledged, resolved).
        :param pulumi.Input[str] footer_link: Footer link.
        :param pulumi.Input[str] footer_text: Footer text.
        :param pulumi.Input[Sequence[pulumi.Input['SebformInputFieldArgs']]] input_fields: Input Fields added to Webforms. Added as tags to incident based on selection.
        :param pulumi.Input[str] name: Name of the Webform.
        :param pulumi.Input[Sequence[pulumi.Input['SebformSeverityArgs']]] severities: Severity of the incident.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Webform Tags.
        """
        pulumi.set(__self__, "header", header)
        pulumi.set(__self__, "owner", owner)
        pulumi.set(__self__, "services", services)
        pulumi.set(__self__, "team_id", team_id)
        pulumi.set(__self__, "title", title)
        if custom_domain_name is not None:
            pulumi.set(__self__, "custom_domain_name", custom_domain_name)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if email_ons is not None:
            pulumi.set(__self__, "email_ons", email_ons)
        if footer_link is not None:
            pulumi.set(__self__, "footer_link", footer_link)
        if footer_text is not None:
            pulumi.set(__self__, "footer_text", footer_text)
        if input_fields is not None:
            pulumi.set(__self__, "input_fields", input_fields)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if severities is not None:
            warnings.warn("""Use `input_field` instead of `severity`.""", DeprecationWarning)
            pulumi.log.warn("""severities is deprecated: Use `input_field` instead of `severity`.""")
        if severities is not None:
            pulumi.set(__self__, "severities", severities)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def header(self) -> pulumi.Input[str]:
        """
        Webform header.
        """
        return pulumi.get(self, "header")

    @header.setter
    def header(self, value: pulumi.Input[str]):
        pulumi.set(self, "header", value)

    @property
    @pulumi.getter
    def owner(self) -> pulumi.Input['SebformOwnerArgs']:
        """
        Form owner.
        """
        return pulumi.get(self, "owner")

    @owner.setter
    def owner(self, value: pulumi.Input['SebformOwnerArgs']):
        pulumi.set(self, "owner", value)

    @property
    @pulumi.getter
    def services(self) -> pulumi.Input[Sequence[pulumi.Input['SebformServiceArgs']]]:
        """
        Services added to Webform.
        """
        return pulumi.get(self, "services")

    @services.setter
    def services(self, value: pulumi.Input[Sequence[pulumi.Input['SebformServiceArgs']]]):
        pulumi.set(self, "services", value)

    @property
    @pulumi.getter(name="teamId")
    def team_id(self) -> pulumi.Input[str]:
        """
        Team id.
        """
        return pulumi.get(self, "team_id")

    @team_id.setter
    def team_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "team_id", value)

    @property
    @pulumi.getter
    def title(self) -> pulumi.Input[str]:
        """
        Webform title (public).
        """
        return pulumi.get(self, "title")

    @title.setter
    def title(self, value: pulumi.Input[str]):
        pulumi.set(self, "title", value)

    @property
    @pulumi.getter(name="customDomainName")
    def custom_domain_name(self) -> Optional[pulumi.Input[str]]:
        """
        Custom domain name (URL).
        """
        return pulumi.get(self, "custom_domain_name")

    @custom_domain_name.setter
    def custom_domain_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "custom_domain_name", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the Webform.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="emailOns")
    def email_ons(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Defines when to send email to the reporter (triggered, acknowledged, resolved).
        """
        return pulumi.get(self, "email_ons")

    @email_ons.setter
    def email_ons(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "email_ons", value)

    @property
    @pulumi.getter(name="footerLink")
    def footer_link(self) -> Optional[pulumi.Input[str]]:
        """
        Footer link.
        """
        return pulumi.get(self, "footer_link")

    @footer_link.setter
    def footer_link(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "footer_link", value)

    @property
    @pulumi.getter(name="footerText")
    def footer_text(self) -> Optional[pulumi.Input[str]]:
        """
        Footer text.
        """
        return pulumi.get(self, "footer_text")

    @footer_text.setter
    def footer_text(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "footer_text", value)

    @property
    @pulumi.getter(name="inputFields")
    def input_fields(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SebformInputFieldArgs']]]]:
        """
        Input Fields added to Webforms. Added as tags to incident based on selection.
        """
        return pulumi.get(self, "input_fields")

    @input_fields.setter
    def input_fields(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SebformInputFieldArgs']]]]):
        pulumi.set(self, "input_fields", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the Webform.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def severities(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SebformSeverityArgs']]]]:
        """
        Severity of the incident.
        """
        warnings.warn("""Use `input_field` instead of `severity`.""", DeprecationWarning)
        pulumi.log.warn("""severities is deprecated: Use `input_field` instead of `severity`.""")

        return pulumi.get(self, "severities")

    @severities.setter
    def severities(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SebformSeverityArgs']]]]):
        pulumi.set(self, "severities", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Webform Tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _SebformState:
    def __init__(__self__, *,
                 custom_domain_name: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 email_ons: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 footer_link: Optional[pulumi.Input[str]] = None,
                 footer_text: Optional[pulumi.Input[str]] = None,
                 header: Optional[pulumi.Input[str]] = None,
                 input_fields: Optional[pulumi.Input[Sequence[pulumi.Input['SebformInputFieldArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 owner: Optional[pulumi.Input['SebformOwnerArgs']] = None,
                 public_url: Optional[pulumi.Input[str]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input['SebformServiceArgs']]]] = None,
                 severities: Optional[pulumi.Input[Sequence[pulumi.Input['SebformSeverityArgs']]]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 team_id: Optional[pulumi.Input[str]] = None,
                 title: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Sebform resources.
        :param pulumi.Input[str] custom_domain_name: Custom domain name (URL).
        :param pulumi.Input[str] description: Description of the Webform.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] email_ons: Defines when to send email to the reporter (triggered, acknowledged, resolved).
        :param pulumi.Input[str] footer_link: Footer link.
        :param pulumi.Input[str] footer_text: Footer text.
        :param pulumi.Input[str] header: Webform header.
        :param pulumi.Input[Sequence[pulumi.Input['SebformInputFieldArgs']]] input_fields: Input Fields added to Webforms. Added as tags to incident based on selection.
        :param pulumi.Input[str] name: Name of the Webform.
        :param pulumi.Input['SebformOwnerArgs'] owner: Form owner.
        :param pulumi.Input[str] public_url: Public URL of the Webform.
        :param pulumi.Input[Sequence[pulumi.Input['SebformServiceArgs']]] services: Services added to Webform.
        :param pulumi.Input[Sequence[pulumi.Input['SebformSeverityArgs']]] severities: Severity of the incident.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Webform Tags.
        :param pulumi.Input[str] team_id: Team id.
        :param pulumi.Input[str] title: Webform title (public).
        """
        if custom_domain_name is not None:
            pulumi.set(__self__, "custom_domain_name", custom_domain_name)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if email_ons is not None:
            pulumi.set(__self__, "email_ons", email_ons)
        if footer_link is not None:
            pulumi.set(__self__, "footer_link", footer_link)
        if footer_text is not None:
            pulumi.set(__self__, "footer_text", footer_text)
        if header is not None:
            pulumi.set(__self__, "header", header)
        if input_fields is not None:
            pulumi.set(__self__, "input_fields", input_fields)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if owner is not None:
            pulumi.set(__self__, "owner", owner)
        if public_url is not None:
            pulumi.set(__self__, "public_url", public_url)
        if services is not None:
            pulumi.set(__self__, "services", services)
        if severities is not None:
            warnings.warn("""Use `input_field` instead of `severity`.""", DeprecationWarning)
            pulumi.log.warn("""severities is deprecated: Use `input_field` instead of `severity`.""")
        if severities is not None:
            pulumi.set(__self__, "severities", severities)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if team_id is not None:
            pulumi.set(__self__, "team_id", team_id)
        if title is not None:
            pulumi.set(__self__, "title", title)

    @property
    @pulumi.getter(name="customDomainName")
    def custom_domain_name(self) -> Optional[pulumi.Input[str]]:
        """
        Custom domain name (URL).
        """
        return pulumi.get(self, "custom_domain_name")

    @custom_domain_name.setter
    def custom_domain_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "custom_domain_name", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the Webform.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="emailOns")
    def email_ons(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Defines when to send email to the reporter (triggered, acknowledged, resolved).
        """
        return pulumi.get(self, "email_ons")

    @email_ons.setter
    def email_ons(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "email_ons", value)

    @property
    @pulumi.getter(name="footerLink")
    def footer_link(self) -> Optional[pulumi.Input[str]]:
        """
        Footer link.
        """
        return pulumi.get(self, "footer_link")

    @footer_link.setter
    def footer_link(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "footer_link", value)

    @property
    @pulumi.getter(name="footerText")
    def footer_text(self) -> Optional[pulumi.Input[str]]:
        """
        Footer text.
        """
        return pulumi.get(self, "footer_text")

    @footer_text.setter
    def footer_text(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "footer_text", value)

    @property
    @pulumi.getter
    def header(self) -> Optional[pulumi.Input[str]]:
        """
        Webform header.
        """
        return pulumi.get(self, "header")

    @header.setter
    def header(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "header", value)

    @property
    @pulumi.getter(name="inputFields")
    def input_fields(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SebformInputFieldArgs']]]]:
        """
        Input Fields added to Webforms. Added as tags to incident based on selection.
        """
        return pulumi.get(self, "input_fields")

    @input_fields.setter
    def input_fields(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SebformInputFieldArgs']]]]):
        pulumi.set(self, "input_fields", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the Webform.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def owner(self) -> Optional[pulumi.Input['SebformOwnerArgs']]:
        """
        Form owner.
        """
        return pulumi.get(self, "owner")

    @owner.setter
    def owner(self, value: Optional[pulumi.Input['SebformOwnerArgs']]):
        pulumi.set(self, "owner", value)

    @property
    @pulumi.getter(name="publicUrl")
    def public_url(self) -> Optional[pulumi.Input[str]]:
        """
        Public URL of the Webform.
        """
        return pulumi.get(self, "public_url")

    @public_url.setter
    def public_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_url", value)

    @property
    @pulumi.getter
    def services(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SebformServiceArgs']]]]:
        """
        Services added to Webform.
        """
        return pulumi.get(self, "services")

    @services.setter
    def services(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SebformServiceArgs']]]]):
        pulumi.set(self, "services", value)

    @property
    @pulumi.getter
    def severities(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SebformSeverityArgs']]]]:
        """
        Severity of the incident.
        """
        warnings.warn("""Use `input_field` instead of `severity`.""", DeprecationWarning)
        pulumi.log.warn("""severities is deprecated: Use `input_field` instead of `severity`.""")

        return pulumi.get(self, "severities")

    @severities.setter
    def severities(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SebformSeverityArgs']]]]):
        pulumi.set(self, "severities", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Webform Tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="teamId")
    def team_id(self) -> Optional[pulumi.Input[str]]:
        """
        Team id.
        """
        return pulumi.get(self, "team_id")

    @team_id.setter
    def team_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "team_id", value)

    @property
    @pulumi.getter
    def title(self) -> Optional[pulumi.Input[str]]:
        """
        Webform title (public).
        """
        return pulumi.get(self, "title")

    @title.setter
    def title(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "title", value)


class Sebform(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 custom_domain_name: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 email_ons: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 footer_link: Optional[pulumi.Input[str]] = None,
                 footer_text: Optional[pulumi.Input[str]] = None,
                 header: Optional[pulumi.Input[str]] = None,
                 input_fields: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformInputFieldArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 owner: Optional[pulumi.Input[pulumi.InputType['SebformOwnerArgs']]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformServiceArgs']]]]] = None,
                 severities: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformSeverityArgs']]]]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 team_id: Optional[pulumi.Input[str]] = None,
                 title: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        [Squadcast Webforms](https://support.squadcast.com/webforms/webforms) allows organizations to expand their customer support by hosting public Webforms, so their customers can quickly create an alert from outside the Squadcast ecosystem. Not only this, but internal stakeholders can also leverage Webforms for easy alert creation.

        ## Import

        teamID:webformName Use 'Get All Teams' API to get the id of the team

        ```sh
         $ pulumi import squadcast:index/sebform:Sebform example_webform "63065e992a5f9a1d5792b6c5:Webform Name"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] custom_domain_name: Custom domain name (URL).
        :param pulumi.Input[str] description: Description of the Webform.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] email_ons: Defines when to send email to the reporter (triggered, acknowledged, resolved).
        :param pulumi.Input[str] footer_link: Footer link.
        :param pulumi.Input[str] footer_text: Footer text.
        :param pulumi.Input[str] header: Webform header.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformInputFieldArgs']]]] input_fields: Input Fields added to Webforms. Added as tags to incident based on selection.
        :param pulumi.Input[str] name: Name of the Webform.
        :param pulumi.Input[pulumi.InputType['SebformOwnerArgs']] owner: Form owner.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformServiceArgs']]]] services: Services added to Webform.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformSeverityArgs']]]] severities: Severity of the incident.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Webform Tags.
        :param pulumi.Input[str] team_id: Team id.
        :param pulumi.Input[str] title: Webform title (public).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SebformArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        [Squadcast Webforms](https://support.squadcast.com/webforms/webforms) allows organizations to expand their customer support by hosting public Webforms, so their customers can quickly create an alert from outside the Squadcast ecosystem. Not only this, but internal stakeholders can also leverage Webforms for easy alert creation.

        ## Import

        teamID:webformName Use 'Get All Teams' API to get the id of the team

        ```sh
         $ pulumi import squadcast:index/sebform:Sebform example_webform "63065e992a5f9a1d5792b6c5:Webform Name"
        ```

        :param str resource_name: The name of the resource.
        :param SebformArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SebformArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 custom_domain_name: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 email_ons: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 footer_link: Optional[pulumi.Input[str]] = None,
                 footer_text: Optional[pulumi.Input[str]] = None,
                 header: Optional[pulumi.Input[str]] = None,
                 input_fields: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformInputFieldArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 owner: Optional[pulumi.Input[pulumi.InputType['SebformOwnerArgs']]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformServiceArgs']]]]] = None,
                 severities: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformSeverityArgs']]]]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 team_id: Optional[pulumi.Input[str]] = None,
                 title: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SebformArgs.__new__(SebformArgs)

            __props__.__dict__["custom_domain_name"] = custom_domain_name
            __props__.__dict__["description"] = description
            __props__.__dict__["email_ons"] = email_ons
            __props__.__dict__["footer_link"] = footer_link
            __props__.__dict__["footer_text"] = footer_text
            if header is None and not opts.urn:
                raise TypeError("Missing required property 'header'")
            __props__.__dict__["header"] = header
            __props__.__dict__["input_fields"] = input_fields
            __props__.__dict__["name"] = name
            if owner is None and not opts.urn:
                raise TypeError("Missing required property 'owner'")
            __props__.__dict__["owner"] = owner
            if services is None and not opts.urn:
                raise TypeError("Missing required property 'services'")
            __props__.__dict__["services"] = services
            if severities is not None and not opts.urn:
                warnings.warn("""Use `input_field` instead of `severity`.""", DeprecationWarning)
                pulumi.log.warn("""severities is deprecated: Use `input_field` instead of `severity`.""")
            __props__.__dict__["severities"] = severities
            __props__.__dict__["tags"] = tags
            if team_id is None and not opts.urn:
                raise TypeError("Missing required property 'team_id'")
            __props__.__dict__["team_id"] = team_id
            if title is None and not opts.urn:
                raise TypeError("Missing required property 'title'")
            __props__.__dict__["title"] = title
            __props__.__dict__["public_url"] = None
        super(Sebform, __self__).__init__(
            'squadcast:index/sebform:Sebform',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            custom_domain_name: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            email_ons: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            footer_link: Optional[pulumi.Input[str]] = None,
            footer_text: Optional[pulumi.Input[str]] = None,
            header: Optional[pulumi.Input[str]] = None,
            input_fields: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformInputFieldArgs']]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            owner: Optional[pulumi.Input[pulumi.InputType['SebformOwnerArgs']]] = None,
            public_url: Optional[pulumi.Input[str]] = None,
            services: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformServiceArgs']]]]] = None,
            severities: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformSeverityArgs']]]]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            team_id: Optional[pulumi.Input[str]] = None,
            title: Optional[pulumi.Input[str]] = None) -> 'Sebform':
        """
        Get an existing Sebform resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] custom_domain_name: Custom domain name (URL).
        :param pulumi.Input[str] description: Description of the Webform.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] email_ons: Defines when to send email to the reporter (triggered, acknowledged, resolved).
        :param pulumi.Input[str] footer_link: Footer link.
        :param pulumi.Input[str] footer_text: Footer text.
        :param pulumi.Input[str] header: Webform header.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformInputFieldArgs']]]] input_fields: Input Fields added to Webforms. Added as tags to incident based on selection.
        :param pulumi.Input[str] name: Name of the Webform.
        :param pulumi.Input[pulumi.InputType['SebformOwnerArgs']] owner: Form owner.
        :param pulumi.Input[str] public_url: Public URL of the Webform.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformServiceArgs']]]] services: Services added to Webform.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SebformSeverityArgs']]]] severities: Severity of the incident.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Webform Tags.
        :param pulumi.Input[str] team_id: Team id.
        :param pulumi.Input[str] title: Webform title (public).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SebformState.__new__(_SebformState)

        __props__.__dict__["custom_domain_name"] = custom_domain_name
        __props__.__dict__["description"] = description
        __props__.__dict__["email_ons"] = email_ons
        __props__.__dict__["footer_link"] = footer_link
        __props__.__dict__["footer_text"] = footer_text
        __props__.__dict__["header"] = header
        __props__.__dict__["input_fields"] = input_fields
        __props__.__dict__["name"] = name
        __props__.__dict__["owner"] = owner
        __props__.__dict__["public_url"] = public_url
        __props__.__dict__["services"] = services
        __props__.__dict__["severities"] = severities
        __props__.__dict__["tags"] = tags
        __props__.__dict__["team_id"] = team_id
        __props__.__dict__["title"] = title
        return Sebform(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="customDomainName")
    def custom_domain_name(self) -> pulumi.Output[Optional[str]]:
        """
        Custom domain name (URL).
        """
        return pulumi.get(self, "custom_domain_name")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Description of the Webform.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="emailOns")
    def email_ons(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Defines when to send email to the reporter (triggered, acknowledged, resolved).
        """
        return pulumi.get(self, "email_ons")

    @property
    @pulumi.getter(name="footerLink")
    def footer_link(self) -> pulumi.Output[Optional[str]]:
        """
        Footer link.
        """
        return pulumi.get(self, "footer_link")

    @property
    @pulumi.getter(name="footerText")
    def footer_text(self) -> pulumi.Output[Optional[str]]:
        """
        Footer text.
        """
        return pulumi.get(self, "footer_text")

    @property
    @pulumi.getter
    def header(self) -> pulumi.Output[str]:
        """
        Webform header.
        """
        return pulumi.get(self, "header")

    @property
    @pulumi.getter(name="inputFields")
    def input_fields(self) -> pulumi.Output[Optional[Sequence['outputs.SebformInputField']]]:
        """
        Input Fields added to Webforms. Added as tags to incident based on selection.
        """
        return pulumi.get(self, "input_fields")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Name of the Webform.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def owner(self) -> pulumi.Output['outputs.SebformOwner']:
        """
        Form owner.
        """
        return pulumi.get(self, "owner")

    @property
    @pulumi.getter(name="publicUrl")
    def public_url(self) -> pulumi.Output[str]:
        """
        Public URL of the Webform.
        """
        return pulumi.get(self, "public_url")

    @property
    @pulumi.getter
    def services(self) -> pulumi.Output[Sequence['outputs.SebformService']]:
        """
        Services added to Webform.
        """
        return pulumi.get(self, "services")

    @property
    @pulumi.getter
    def severities(self) -> pulumi.Output[Optional[Sequence['outputs.SebformSeverity']]]:
        """
        Severity of the incident.
        """
        warnings.warn("""Use `input_field` instead of `severity`.""", DeprecationWarning)
        pulumi.log.warn("""severities is deprecated: Use `input_field` instead of `severity`.""")

        return pulumi.get(self, "severities")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Webform Tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="teamId")
    def team_id(self) -> pulumi.Output[str]:
        """
        Team id.
        """
        return pulumi.get(self, "team_id")

    @property
    @pulumi.getter
    def title(self) -> pulumi.Output[str]:
        """
        Webform title (public).
        """
        return pulumi.get(self, "title")

