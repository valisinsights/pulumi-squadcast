// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * [Squadcast Webforms](https://support.squadcast.com/webforms/webforms) allows organizations to expand their customer support by hosting public Webforms, so their customers can quickly create an alert from outside the Squadcast ecosystem. Not only this, but internal stakeholders can also leverage Webforms for easy alert creation. Use this data source to get information about a specific webform.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as squadcast from "@pulumi/squadcast";
 *
 * const webform = squadcast.getWebform({
 *     name: "webformName",
 *     teamId: "team id",
 * });
 * ```
 */
export function getWebform(args: GetWebformArgs, opts?: pulumi.InvokeOptions): Promise<GetWebformResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("squadcast:index/getWebform:getWebform", {
        "name": args.name,
        "teamId": args.teamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWebform.
 */
export interface GetWebformArgs {
    /**
     * Name of the Webform.
     */
    name: string;
    /**
     * Team id.
     */
    teamId: string;
}

/**
 * A collection of values returned by getWebform.
 */
export interface GetWebformResult {
    /**
     * Custom domain name (URL).
     */
    readonly customDomainName: string;
    /**
     * Description of the Webform.
     */
    readonly description: string;
    /**
     * Defines when to send email to the reporter (triggered, acknowledged, resolved).
     */
    readonly emailOns: string[];
    /**
     * Footer link.
     */
    readonly footerLink: string;
    /**
     * Footer text.
     */
    readonly footerText: string;
    /**
     * Webform header.
     */
    readonly header: string;
    /**
     * Webform id.
     */
    readonly id: number;
    /**
     * Input Fields added to Webforms. Added as tags to incident based on selection.
     */
    readonly inputFields: outputs.GetWebformInputField[];
    /**
     * Name of the Webform.
     */
    readonly name: string;
    /**
     * Form owner.
     */
    readonly owners: outputs.GetWebformOwner[];
    /**
     * Public URL of the Webform.
     */
    readonly publicUrl: string;
    /**
     * Services added to Webform.
     */
    readonly services: outputs.GetWebformService[];
    /**
     * Severity of the Incident.
     *
     * @deprecated Use `input_field` instead of `severity`.
     */
    readonly severities: outputs.GetWebformSeverity[];
    /**
     * Webform Tags.
     */
    readonly tags: {[key: string]: string};
    /**
     * Team id.
     */
    readonly teamId: string;
    /**
     * Webform title (public).
     */
    readonly title: string;
}
/**
 * [Squadcast Webforms](https://support.squadcast.com/webforms/webforms) allows organizations to expand their customer support by hosting public Webforms, so their customers can quickly create an alert from outside the Squadcast ecosystem. Not only this, but internal stakeholders can also leverage Webforms for easy alert creation. Use this data source to get information about a specific webform.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as squadcast from "@pulumi/squadcast";
 *
 * const webform = squadcast.getWebform({
 *     name: "webformName",
 *     teamId: "team id",
 * });
 * ```
 */
export function getWebformOutput(args: GetWebformOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWebformResult> {
    return pulumi.output(args).apply((a: any) => getWebform(a, opts))
}

/**
 * A collection of arguments for invoking getWebform.
 */
export interface GetWebformOutputArgs {
    /**
     * Name of the Webform.
     */
    name: pulumi.Input<string>;
    /**
     * Team id.
     */
    teamId: pulumi.Input<string>;
}
