// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Teams is a way for customers to represent their organizational structure in Squadcast. Each Team can be considered as an isolated workspace with their own configurations and permissions.Use this data source to get information about a specific Team.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as squadcast from "@pulumi/squadcast";
 *
 * const test = squadcast.getTeam({
 *     name: "Default Team",
 * });
 * ```
 */
export function getTeam(args: GetTeamArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("squadcast:index/getTeam:getTeam", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamArgs {
    /**
     * Name of the Team.
     */
    name: string;
}

/**
 * A collection of values returned by getTeam.
 */
export interface GetTeamResult {
    /**
     * Squadcast has one default team and this field let's us know if this is the default team.
     */
    readonly default: boolean;
    /**
     * Detailed description about the Team.
     */
    readonly description: string;
    /**
     * Team id.
     */
    readonly id: string;
    readonly members: outputs.GetTeamMember[];
    /**
     * Name of the Team.
     */
    readonly name: string;
    readonly roles: outputs.GetTeamRole[];
}
/**
 * Teams is a way for customers to represent their organizational structure in Squadcast. Each Team can be considered as an isolated workspace with their own configurations and permissions.Use this data source to get information about a specific Team.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as squadcast from "@pulumi/squadcast";
 *
 * const test = squadcast.getTeam({
 *     name: "Default Team",
 * });
 * ```
 */
export function getTeamOutput(args: GetTeamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamResult> {
    return pulumi.output(args).apply((a: any) => getTeam(a, opts))
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamOutputArgs {
    /**
     * Name of the Team.
     */
    name: pulumi.Input<string>;
}
